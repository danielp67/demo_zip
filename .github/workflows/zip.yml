name: Create Release
on:
  push:
    branches: [ develop ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:

      - name: Checkout source
        uses: actions/checkout@v1

      - name: Setup java
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 14.x

      - name: Install Ionic
        run: npm install -g @ionic/cli

      - name: Install app dependencies
        run: npm install --force

      - name: Build
        run: ionic build

      - name: Add Android and ios platform
        run: |
          npx cap add android
          npx cap add ios

      - name: Upload Android folder
        uses: actions/upload-artifact@v1
        with:
          name: android-artifact
          path: android/

#      - name: Upload Android Release
#        uses: actions/upload-artifact@v2
#        with:
#          tag: "latest453"
#          token: ${{ secrets.GITHUB_TOKEN }}

#
#      - name: Upload ios folder
#        uses: actions/upload-artifact@v1
#        with:
#          name: ios-artifact
#          path: ios/

      - name: Generate the Android App Bundle
        working-directory: ./android/
        run: |
          ./gradlew bundle
          ./gradlew assembleDebug

      - name: Upload dev APK
        uses: actions/upload-artifact@v1
        with:
          name: app-dev
          path: android/app/build/outputs/apk/debug/app-debug.apk


#      - uses: actions/checkout@master
#      - name: Archive Release
#        uses: thedoctor0/zip-release@master
#        with:
#
#          filename: 'release.zip'
#          exclusions: '*.git* /*node_modules/* .editorconfig'
#


#      - name: Create Release
#        id: create_release
#        uses: actions/create-release@v1
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          tag_name: "test"
#          release_name: Release-1
#          draft: false
#          prerelease: false
#      - name: Upload Release Asset
#        id: upload-release-asset
#        uses: actions/upload-release-asset@v1
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
#          asset_path: ./my-artifact.zip
#          asset_name: my-artifact.zip
#          asset_content_type: application/zip
